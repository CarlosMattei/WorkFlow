<head>
  <link rel="stylesheet" href="/css/proposals/proposals.css">
</head>

<body>

  <section class="section2">
    <div class="container-filter">
      <div class="filtro">
        <h2>Filtrar</h2>
        <div class="container-area">
          <label for="area">Área</label>
          <select name="area" id="area">
            <option value="Todos">Todos</option>
            <option value="Design">Design</option>
            <option value="UI design">UI Design</option>
            <option value="3D design">3D Design</option>
            <option value="Canva design">Canva design</option>
            <option value="UX">UX</option>
            <option value="Web design">Web design</option>
            <option value="Interior design">interior design</option>
            <option value="Poster design">Poster Design</option>
          </select>
        </div>
        <div class="container-periodo">
          <label for="periodo">Periodo</label>
          <select name="periodo" id="periodo">
            <option value="hoje">hoje</option>
            <option value="ultimaSemana">Ultima semana</option>
            <option value="ultimoMes">Ultimo mês</option>
          </select>
        </div>
        <div class="container-preco">
          <div class="min">
            <label for="min">Preço Min.</label>
            <input type="text" name="min" id="precomin">
          </div>
          <div class="max">
            <label for="max">Preço Max.</label>
            <input type="text" name="max" id="precomax">
          </div>
        </div>
        <div class="container-botao">
          <button type="submit" id="btnFiltrar">Filtrar</button>
        </div>
      </div>
    </div>

    <div class="propostas">
      <!-- Cards serão inseridos aqui via JS -->
    </div>
  </section>

  <script type="module">
    import { initializeApp, getApps } from "https://www.gstatic.com/firebasejs/10.12.0/firebase-app.js";
    import { getDatabase, ref, onValue } from "https://www.gstatic.com/firebasejs/10.12.0/firebase-database.js";

    const firebaseConfig = {
      apiKey: "AIzaSyAAtfGyZc3SLzdK10zdq-ALyTyIs1s4qwQ",
      authDomain: "workflow-da28d.firebaseapp.com",
      projectId: "workflow-da28d",
      storageBucket: "workflow-da28d.appspot.com",
      messagingSenderId: "939828605253",
      appId: "1:939828605253:web:0a286fe00f1c29ba614e2c",
      measurementId: "G-3LXB7BR5M1"
    };

    let app;
    if (!getApps().length) {
      app = initializeApp(firebaseConfig);
    } else {
      app = getApps()[0];
    }
    const db = getDatabase(app);

    const propostasContainer = document.querySelector('.section2 .propostas');
    const btnFiltrar = document.getElementById('btnFiltrar');

    // Guarda as propostas para filtrar localmente
    let propostas = [];

    function formatarData(isoString) {
      const data = new Date(isoString);
      return data.toLocaleDateString('pt-BR', { day: '2-digit', month: 'long', year: 'numeric' });
    }

    function renderizarPropostas(propostasFiltradas) {
      propostasContainer.innerHTML = '';

      if (propostasFiltradas.length === 0) {
        propostasContainer.innerHTML = '<p>Nenhuma proposta encontrada com os filtros selecionados.</p>';
        return;
      }

      propostasFiltradas.forEach(p => {
        const card = document.createElement('div');
        card.classList.add('proposta-card');

        card.innerHTML = `
          <div class="head">
            <h3>${p.titulo}</h3>
            <div class="price">R$${p.precoMin} - R$${p.precoMax}</div>
          </div>
          <p class="criadoEm">Criado em ${formatarData(p.datacriacao)}</p>
          <div class="tags">
            ${p.tags.map(tag => `<span class="tag">${tag}</span>`).join('')}
          </div>
          <p class="description">${p.descricao}</p>
          <div class="footer">
            <div class="client">
              <img class="profilePic" src="" alt="Client">
              <span>João Silva</span>
            </div>
            <div class="buttons">
              <button class="verMais">Ver mais</button>
              <button class="enviar">Enviar proposta</button>
            </div>
          </div>
        `;
        propostasContainer.appendChild(card);
      });
    }

    function filtrarPropostas() {
      const area = document.getElementById('area').value;
      const periodo = document.getElementById('periodo').value;
      const precoMin = parseFloat(document.getElementById('precomin').value) || 0;
      const precoMax = parseFloat(document.getElementById('precomax').value) || Infinity;

      const agora = new Date();

      const propostasFiltradas = propostas.filter(p => {
        const dataCriacao = new Date(p.datacriacao);

        // Se "Todos", ignora filtro de área
        const dentroDaArea = (area === "Todos") ? true : p.tags.includes(area);

        // Filtrar por período
        let dentroDoPeriodo = true;
        if (periodo === 'hoje') {
          dentroDoPeriodo = dataCriacao.toDateString() === agora.toDateString();
        } else if (periodo === 'ultimaSemana') {
          const seteDiasAtras = new Date();
          seteDiasAtras.setDate(agora.getDate() - 7);
          dentroDoPeriodo = dataCriacao >= seteDiasAtras;
        } else if (periodo === 'ultimoMes') {
          const trintaDiasAtras = new Date();
          trintaDiasAtras.setDate(agora.getDate() - 30);
          dentroDoPeriodo = dataCriacao >= trintaDiasAtras;
        }

        // Filtrar por preço
        const dentroDoPreco = p.precoMin >= precoMin && p.precoMax <= precoMax;

        return dentroDaArea && dentroDoPeriodo && dentroDoPreco;
      });

      renderizarPropostas(propostasFiltradas);
    }

    onValue(ref(db, 'Propostas'), (snapshot) => {
      propostas = [];
      snapshot.forEach(childSnap => {
        propostas.push(childSnap.val());
      });
      renderizarPropostas(propostas);
    });

    btnFiltrar.addEventListener('click', (e) => {
      e.preventDefault();
      filtrarPropostas();
    });
  </script>
</body>
